# Generated by Django 4.0.4 on 2022-05-25 09:33

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('location', models.CharField(default='default_location', max_length=201)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_name', models.CharField(max_length=150)),
                ('size', models.IntegerField()),
                ('upload_date', models.DateField(default=datetime.date(2022, 5, 25))),
                ('lastmodif', models.DateField(auto_now=True, help_text='Последнее изменение (изменяется на obj.save())', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('appoint', 'appoint'), ('resign', 'resign')], max_length=50)),
                ('date', models.DateField()),
                ('level', models.CharField(choices=[('federal', 'federal'), ('regional', 'regional')], max_length=51)),
                ('full_text', models.CharField(max_length=99999, null=True)),
                ('line', models.CharField(max_length=8000, null=True)),
                ('link', models.CharField(default='https://example.com', max_length=2000, null=True)),
                ('file_name', models.CharField(default='defaults_file_name', max_length=599, null=True)),
                ('region', models.CharField(choices=[('Белгородская область', 'Белгородская область'), ('Брянская область', 'Брянская область'), ('Владимирская область', 'Владимирская область'), ('Воронежская область', 'Воронежская область'), ('Ивановская область', 'Ивановская область'), ('Калужская область', 'Калужская область'), ('Костромская область', 'Костромская область'), ('Курская область', 'Курская область'), ('Липецкая область', 'Липецкая область'), ('Московская область', 'Московская область'), ('Орловская область', 'Орловская область'), ('Рязанская область', 'Рязанская область'), ('Смоленская область', 'Смоленская область'), ('Тамбовская область', 'Тамбовская область'), ('Тверская область', 'Тверская область'), ('Тульская область', 'Тульская область'), ('Ярославская область', 'Ярославская область'), ('Москва', 'Москва'), ('Республика Карелия', 'Республика Карелия'), ('Республика Коми', 'Республика Коми'), ('Архангельская область', 'Архангельская область'), ('Ненецкий автономный округ', 'Ненецкий автономный округ'), ('Вологодская область', 'Вологодская область'), ('Калининградская область', 'Калининградская область'), ('Ленинградская область', 'Ленинградская область'), ('Мурманская область', 'Мурманская область'), ('Новгородская область', 'Новгородская область'), ('Санкт-Петербург', 'Санкт-Петербург'), ('Республика Адыгея', 'Республика Адыгея'), ('Республика Калмыкия', 'Республика Калмыкия'), ('Республика Крым', 'Республика Крым'), ('Краснодарский край', 'Краснодарский край'), ('Астраханская область', 'Астраханская область'), ('Волгоградская область', 'Волгоградская область'), ('Ростовская область', 'Ростовская область'), ('Севастополь', 'Севастополь'), ('Республика Башкортостан', 'Республика Башкортостан'), ('Республика Марий Эл', 'Республика Марий Эл'), ('Республика Мордовия', 'Республика Мордовия'), ('Республика Татарстан', 'Республика Татарстан'), ('Удмуртская Республика', 'Удмуртская Республика'), ('Чувашская Республика', 'Чувашская Республика'), ('Кировская область', 'Кировская область'), ('Нижегородская область', 'Нижегородская область'), ('Оренбургская область', 'Оренбургская область'), ('Пензенская область', 'Пензенская область'), ('Пермский край', 'Пермский край'), ('Самарская область', 'Самарская область'), ('Саратовская область', 'Саратовская область'), ('Ульяновская область', 'Ульяновская область'), ('Курганская область', 'Курганская область'), ('Свердловская область', 'Свердловская область'), ('Тюменская область', 'Тюменская область'), ('Челябинская область', 'Челябинская область'), ('Ханты-Мансийский автономный', 'Ханты-Мансийский автономный'), ('Ямало-Ненецкий автономный округ', 'Ямало-Ненецкий автономный округ'), ('Республика Алтай', 'Республика Алтай'), ('Республика Тыва', 'Республика Тыва'), ('Республика Хакасия', 'Республика Хакасия'), ('Алтайский край', 'Алтайский край'), ('Красноярский край', 'Красноярский край'), ('Иркутская область', 'Иркутская область'), ('Кемеровская область', 'Кемеровская область'), ('Новосибирская область', 'Новосибирская область'), ('Омская область', 'Омская область'), ('Томская область', 'Томская область'), ('Республика Бурятия', 'Республика Бурятия'), ('Республика Саха (Якутия)', 'Республика Саха (Якутия)'), ('Приморский край', 'Приморский край'), ('Хабаровский край', 'Хабаровский край'), ('Амурская область', 'Амурская область'), ('Камчатский край', 'Камчатский край'), ('Магаданская область', 'Магаданская область'), ('Сахалинская область', 'Сахалинская область'), ('Забайкальский край', 'Забайкальский край'), ('Еврейская автономная область', 'Еврейская автономная область'), ('Чукотский автономный округ', 'Чукотский автономный округ'), ('Республика Дагестан', 'Республика Дагестан'), ('Республика Ингушетия', 'Республика Ингушетия'), ('Кабардино-Балкарская Республика', 'Кабардино-Балкарская Республика'), ('Карачаево-Черкесская Республика', 'Карачаево-Черкесская Республика'), ('Республика Северная Осетия - Алания', 'Республика Северная Осетия - Алания'), ('Чеченская республика', 'Чеченская республика'), ('Ставропольский край', 'Ставропольский край')], default='регион не указан', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('document', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Formats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formatname', models.CharField(max_length=199, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=800)),
                ('level', models.CharField(choices=[('federal', 'federal'), ('regional', 'regional')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=151)),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='formats',
            constraint=models.UniqueConstraint(fields=('formatname',), name='unique_formatname'),
        ),
        migrations.AddField(
            model_name='event',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='decrees.person'),
        ),
        migrations.AddField(
            model_name='event',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='decrees.position'),
        ),
        migrations.AddField(
            model_name='document',
            name='doc_format',
            field=models.ForeignKey(on_delete=models.SET('not_supported_extension'), to='decrees.formats'),
        ),
        migrations.AddField(
            model_name='document',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='myuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='document',
            constraint=models.UniqueConstraint(fields=('user', 'doc_name'), name='unique_user_docname'),
        ),
        migrations.AddConstraint(
            model_name='document',
            constraint=models.CheckConstraint(check=models.Q(('size__lte', 95)), name='my_size_limit'),
        ),
    ]
